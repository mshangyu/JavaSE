public class StudentDemo1 {
	public static void main(String[] args) {
		//创建一个学生对象
		Student s=new Student();
		SetThread st=new SetThread(s);
		GetThread gt=new GetThread(s);
		
		Thread t1=new Thread(st);
		Thread t2=new Thread(gt);
		
		t1.start();
		t2.start();
	}

}
class Student1{
	private String name;
	private int age;
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public int getAge() {
		return age;
	}
	public void setAge(int age) {
		this.age = age;
	}
	@Override
	public String toString() {
		return "Student [name=" + name + ", age=" + age + "]";
	}
}


class SetThread implements Runnable{
	private Student s;
	private int x=0;
	
	public SetThread(Student s){
		this.s=s;
	}
	
	@Override
	public void run() {
		//Student s=new Student();
		while(true){//此处代码影响线程安全问题  所以要同步
			//而且得保证这里是同一把锁 就可以用上面new出来的对象  不需要用其他的了
			//synchronized (new Object()) {
			synchronized (s) {	
				if(x%2==0){
					s.setName("林青霞");
					s.setAge(27);
				}else {
					s.setName("liuyi");
					s.setAge(30);
				}
				x++;
			}
			
		}
	}
}
class GetThread implements Runnable{
	private Student s;
	public GetThread(Student s){
		this.s=s;
	}
	@Override
	public void run() {
		//Student s=new Student();
		//保证是同一把锁 就直接用上面的new出来的s了 不要再重新new一个不一样的了
		//synchronized (new Object()) {
		while(true){
			synchronized (s) {
				System.out.println(s.getName()+"---"+s.getAge());
			}
		}
	}
}
